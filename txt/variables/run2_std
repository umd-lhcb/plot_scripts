tree:
  b0_l0_global_tis_emu: float
  b_dira: double
  b_discard_mu_chi2: double
  b_endvtx_chi2ndof: double
  b_eta: double
  b_fd_chi2: double
  b_fd_trans: double
  b_log_fd_chi2: double
  b_m: double
  b_m_ok: bool
  b_m_ok_no_smr: bool
  b_m_sb: bool
  b_m_sb_no_smr: bool
  b_ndof: int32_t
  b_p: double
  b_pt: double
  d0_comp: double
  d0_comp2: double
  d0_dira: double
  d0_endvtx_chi2ndof: double
  d0_eta: double
  d0_fd_chi2: double
  d0_hlt1_trackmva_tos_emu: bool
  d0_hlt1_twotrackmva_tos_emu: bool
  d0_id: int32_t
  d0_ip: double
  d0_ip_chi2: double
  d0_l0_hadron_tos_emu: float
  d0_log_fd_chi2: double
  d0_log_ip_chi2: double
  d0_m: double
  d0_m_hypo_ok: bool
  d0_m_ok: bool
  d0_ok: bool
  d0_p: double
  d0_pid_ok: bool
  d0_pt: double
  d0_true_id: int32_t
  dd_m_max: double
  dd_m_min: double
  dd_msq: double
  ddx_add_tm: bool
  dst_d0_deltam: double
  dst_endvtx_chi2ndof: double
  dst_id: int32_t
  dst_iso_deltam: double
  dst_m: double
  dst_m_ok: bool
  dst_p: double
  dst_pt: double
  dst_true_id: int32_t
  dstmu_ok: bool
  dx_m_ok: bool
  el: double
  el_raw: double
  el_smr_k: double
  el_smr_pi: double
  event: ULong64_t
  eventNumber: ULong64_t
  ff_b_mass: double
  ff_d_mass: double
  global_cut_ok: bool
  ham_ok: bool
  hlt1: bool
  hlt2: bool
  in_fit_range: bool
  in_fit_range_no_smr: bool
  in_fit_range_smr_k: bool
  in_fit_range_smr_pi: bool
  is_dal_charged_dd: bool
  is_dal_neutral_dd: bool
  is_dal_variable: bool
  is_ddx: bool
  is_ddx_mu: bool
  is_iso: bool
  is_iso_loose: bool
  is_kst: bool
  is_miss_ddx: bool
  is_strange: bool
  iso_bdt1: double
  iso_bdt1_raw: double
  iso_bdt2: double
  iso_bdt3: double
  iso_chrg1: int32_t
  iso_chrg2: int32_t
  iso_nnghost1: float
  iso_nnghost2: float
  iso_nnghost3: float
  iso_p1: float
  iso_p2: float
  iso_p3: float
  iso_pt1: float
  iso_pt2: float
  iso_pt3: float
  iso_true_id1: int32_t
  iso_true_id2: int32_t
  iso_true_id3: int32_t
  iso_type1: int32_t
  iso_type2: int32_t
  iso_type3: int32_t
  k_comp: double
  k_eta: double
  k_gh_prob: double
  k_hlt1_trackmva_tos_emu: bool
  k_ip: double
  k_ip_chi2: double
  k_log_ip_chi2: double
  k_p: double
  k_pt: double
  k_px: double
  k_py: double
  k_pz: double
  l0: bool
  mc_id: int32_t
  mm2: double
  mm2_raw: double
  mm2_smr_k: double
  mm2_smr_pi: double
  mu_comp: double
  mu_eta: double
  mu_gd_mom_true_id: int32_t
  mu_gh_prob: double
  mu_id: int32_t
  mu_ip: double
  mu_ip_chi2: double
  mu_log_ip_chi2: double
  mu_mom_true_id: int32_t
  mu_ok: bool
  mu_p: double
  mu_pid_ok: bool
  mu_pt: double
  mu_px: double
  mu_py: double
  mu_pz: double
  mu_ubdt_ok: bool
  mu_ubdt_veto: bool
  mx_m: double
  nspdhits: float
  ntracks: double
  pi_comp: double
  pi_eta: double
  pi_gh_prob: double
  pi_hlt1_trackmva_tos_emu: bool
  pi_ip: double
  pi_ip_chi2: double
  pi_log_ip_chi2: double
  pi_p: double
  pi_pt: double
  pi_px: double
  pi_py: double
  pi_pz: double
  polarity: int16_t
  prs_in: double
  q2: double
  q2_raw: double
  q2_smr_k: double
  q2_smr_pi: double
  q2_true: double
  run: UInt_t
  runNumber: UInt_t
  skim_global_ok: bool
  skim_global_ok_no_smr: bool
  skim_global_usb: bool
  skim_global_usb_no_smr: bool
  spi_comp: double
  spi_eta: double
  spi_gh_prob: double
  spi_id: int32_t
  spi_ip: double
  spi_ip_chi2: double
  spi_log_ip_chi2: double
  spi_p: double
  spi_pt: double
  spi_px: double
  spi_py: double
  spi_pz: double
  trg_ok: bool
  trks_ok: bool
  truthmatch: int32_t
  vtx_theta: double
  w: double
  w1os: double
  w1os_new: double
  w2os: double
  w2os_new: double
  w_base: double
  w_missDDX: double
  w_w_ubdt: double
  w_w_ubdt_veto: double
  wbr_dd: double
  wdal_charg_lm: double
  wdal_charg_lp: double
  wdal_charg_qm: double
  wdal_charg_qp: double
  wdal_lm: double
  wdal_lp: double
  wdal_neut_lm: double
  wdal_neut_lp: double
  wdal_neut_qm: double
  wdal_neut_qp: double
  wdal_qm: double
  wdal_qp: double
  wdd: double
  wdd_new: double
  wff: double
  wff_dstrun1: double
  wff_dstrun1_var1: double
  wff_dstrun1_var10: double
  wff_dstrun1_var11: double
  wff_dstrun1_var12: double
  wff_dstrun1_var13: double
  wff_dstrun1_var14: double
  wff_dstrun1_var15: double
  wff_dstrun1_var16: double
  wff_dstrun1_var17: double
  wff_dstrun1_var18: double
  wff_dstrun1_var19: double
  wff_dstrun1_var2: double
  wff_dstrun1_var20: double
  wff_dstrun1_var3: double
  wff_dstrun1_var4: double
  wff_dstrun1_var5: double
  wff_dstrun1_var6: double
  wff_dstrun1_var7: double
  wff_dstrun1_var8: double
  wff_dstrun1_var9: double
  wff_var1: double
  wff_var10: double
  wff_var11: double
  wff_var12: double
  wff_var13: double
  wff_var14: double
  wff_var15: double
  wff_var16: double
  wff_var17: double
  wff_var18: double
  wff_var19: double
  wff_var2: double
  wff_var20: double
  wff_var21: double
  wff_var22: double
  wff_var3: double
  wff_var4: double
  wff_var5: double
  wff_var6: double
  wff_var7: double
  wff_var8: double
  wff_var9: double
  wiso: double
  wjk: double
  wkst_m: double
  wkst_p: double
  wpid_iso_nnk1_gt: double
  wpid_iso_nnk1_gt_e: double
  wpid_iso_nnk1_gt_g: double
  wpid_iso_nnk1_gt_k: double
  wpid_iso_nnk1_gt_mu: double
  wpid_iso_nnk1_gt_p: double
  wpid_iso_nnk1_gt_pi: double
  wpid_iso_nnk1_lt: double
  wpid_iso_nnk2_gt: double
  wpid_iso_nnk2_gt_e: double
  wpid_iso_nnk2_gt_g: double
  wpid_iso_nnk2_gt_k: double
  wpid_iso_nnk2_gt_mu: double
  wpid_iso_nnk2_gt_p: double
  wpid_iso_nnk2_gt_pi: double
  wpid_iso_nnk2_lt: double
  wpid_iso_nnk3_gt: double
  wpid_iso_nnk3_gt_e: double
  wpid_iso_nnk3_gt_g: double
  wpid_iso_nnk3_gt_k: double
  wpid_iso_nnk3_gt_mu: double
  wpid_iso_nnk3_gt_p: double
  wpid_iso_nnk3_gt_pi: double
  wpid_iso_nnk3_lt: double
  wpid_iso_nnknng1_gtlt: double
  wpid_iso_nnknng1_gtlt_e: double
  wpid_iso_nnknng1_gtlt_g: double
  wpid_iso_nnknng1_gtlt_k: double
  wpid_iso_nnknng1_gtlt_mu: double
  wpid_iso_nnknng1_gtlt_p: double
  wpid_iso_nnknng1_gtlt_pi: double
  wpid_iso_nnknng1_ltlt: double
  wpid_iso_nnknng1_ltlt_e: double
  wpid_iso_nnknng1_ltlt_g: double
  wpid_iso_nnknng1_ltlt_k: double
  wpid_iso_nnknng1_ltlt_mu: double
  wpid_iso_nnknng1_ltlt_p: double
  wpid_iso_nnknng1_ltlt_pi: double
  wpid_iso_nnknng2_gtlt: double
  wpid_iso_nnknng2_gtlt_e: double
  wpid_iso_nnknng2_gtlt_g: double
  wpid_iso_nnknng2_gtlt_k: double
  wpid_iso_nnknng2_gtlt_mu: double
  wpid_iso_nnknng2_gtlt_p: double
  wpid_iso_nnknng2_gtlt_pi: double
  wpid_iso_nnknng2_ltlt: double
  wpid_iso_nnknng2_ltlt_e: double
  wpid_iso_nnknng2_ltlt_g: double
  wpid_iso_nnknng2_ltlt_k: double
  wpid_iso_nnknng2_ltlt_mu: double
  wpid_iso_nnknng2_ltlt_p: double
  wpid_iso_nnknng2_ltlt_pi: double
  wpid_iso_nnknng3_gtlt: double
  wpid_iso_nnknng3_gtlt_e: double
  wpid_iso_nnknng3_gtlt_g: double
  wpid_iso_nnknng3_gtlt_k: double
  wpid_iso_nnknng3_gtlt_mu: double
  wpid_iso_nnknng3_gtlt_p: double
  wpid_iso_nnknng3_gtlt_pi: double
  wpid_iso_nnknng3_ltlt: double
  wpid_iso_nnknng3_ltlt_e: double
  wpid_iso_nnknng3_ltlt_g: double
  wpid_iso_nnknng3_ltlt_k: double
  wpid_iso_nnknng3_ltlt_mu: double
  wpid_iso_nnknng3_ltlt_p: double
  wpid_iso_nnknng3_ltlt_pi: double
  wpid_k: double
  wpid_mu_ubdt: double
  wpid_mu_ubdt_veto: double
  wpid_pi: double
  wpid_ubdt: double
  wpid_ubdt_veto: double
  wq2m: double
  wq2p: double
  wskim_1os: double
  wskim_1os_new: double
  wskim_2os: double
  wskim_2os_new: double
  wskim_dd: double
  wskim_dd_new: double
  wskim_iso: double
  wtrg: float
  wtrk: double
  wtrk_k: double
  wtrk_mu: double
  wtrk_pi: double
  wtrk_spi: double
  wvtx_debug: double
  wvtx_m: double
  wvtx_p: double

